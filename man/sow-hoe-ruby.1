.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "SOW\-HOE\-RUBY" "1" "October 2010" "RubyWorks" ""
.
.SH "NAME"
\fBsow\-hoe\-ruby\fR \- generate a Ruby project for use with Hoe
.
.SH "SYNOPSIS"
\fBsow hoe\.ruby <name>\fR
.
.SH "DESCRIPTION"
Thye \fBhoe\fR seed is one way in which Sow makes up for the fact that it clobbers the Hoe project\'s \fBsow\fR command\.
.
.P
Note the usage is slighly different from the original hoe command\. To put the scaffolding in a subdirectory you need to supply the \fB\-\-output\fR/\fB\-o\fR option\.
.
.P
Isn\'t it a bit silly to have a command called \fBsow\fR when it could just as well be called \fBhoe\fR anyway? And in fact Sow provides exactly that\. So you DON\'T REALLY NEED THIS SEED\. Simply use the \fBhoe\fR command like you used to use the Hoe\'s \fBsow\fR command\.
.
.SH "COPYRIGHT"
Copyright (c) 2010 Thomas Sawyer
.
.SH "SEE ALSO"
sow(1), hoe(1)
