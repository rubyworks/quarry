= Session

The Session class is the primary controller of the Sow system. By setting up a Session object, you can then have it create, update or remove a scaffold.

  require 'sow/session'

Given that we have Sow sources setup, and a scaffold as defined in layout.rdoc[qed://layout.rdoc]. To create a session we need a +resource+, which is the name of a scaffold, the +destination+ for the scaffolding, an  +environment+, which is a Hash that becomes part of template metadata, and general options that control operation, such as +force+, +skip+, etc.

  resource = 'demo'

  arguments = ['myapp']

  options = {:skip=>true, :output=>File.join(Dir.tmpdir, 'sow', 'myapp')}

  session = Sow::Session.new(resource, arguments, options)

With the instantiation of a Session object, a fair amount of information is setup. For starters, the session has found the scaffold associated with the +resource+.

  session.location.basename == 'demo'

You will also notice that it has convered paths to Pathname objects.

  session.destination.assert.is_a?(Pathname)

Using the +location+ the Session creates a Scaffold object, which models the contents of the scaffold.

  session.scaffold.is_a?(Sow::Scaffold)

We will not go into the Scaffold class here (see the scaffold.rdoc demonstradum for that), but to point out that it extecutes the scaffold's Sowfile which creates a +copylist+.

  session.copylist

It is thi +copylist+ that is passed to the generator which handles the actual scaffolding.



